{
  "openapi": "3.0.1",
  "info": {
    "title": "VendorEnablement",
    "version": "1.0"
  },
  "paths": {
    "/api/Authentication/test": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "test",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/send-invite": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "send-invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/get-invite": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "get-invite",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Files/getfile": {
      "get": {
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "name": "fid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Files/upload": {
      "post": {
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Files/downloadFile": {
      "get": {
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "name": "fid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Master/get-by-type": {
      "post": {
        "tags": [
          "Master"
        ],
        "operationId": "getByType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Master/get-by-parent-id": {
      "post": {
        "tags": [
          "Master"
        ],
        "operationId": "getByParentId",
        "parameters": [
          {
            "name": "parentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Master": {
      "get": {
        "tags": [
          "Master"
        ],
        "operationId": "MasterList",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Master"
        ],
        "operationId": "MasterAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Master"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Master"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Master"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Master/{id}": {
      "get": {
        "tags": [
          "Master"
        ],
        "operationId": "MasterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Master"
        ],
        "operationId": "MasterUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Master"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Master"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Master"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Master"
        ],
        "operationId": "MasterDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Resource/get-resource-grid": {
      "get": {
        "tags": [
          "Resource"
        ],
        "operationId": "get-resource-grid",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uData.VendorDetailsId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Resource/GetResourceById{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "operationId": "GetResourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Resource/search-resource": {
      "post": {
        "tags": [
          "Resource"
        ],
        "operationId": "search-resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchResourceGridRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchResourceGridRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchResourceGridRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Resource": {
      "get": {
        "tags": [
          "Resource"
        ],
        "operationId": "ResourceList",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Resource"
        ],
        "operationId": "ResourceAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Resource/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "operationId": "ResourceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "operationId": "ResourceUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "operationId": "ResourceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "RoleList",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "RoleAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "RoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "operationId": "RoleUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "operationId": "RoleDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/get-user-grid": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "get-user-grid",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "UsersList",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "UsersAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "UsersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "UsersUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "UsersDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vendor": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorList",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VendorDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VendorDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast/search": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast/TEST": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast/TEST2": {
      "post": {
        "tags": [
          "WeatherForecast"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "pincode": {
            "type": "string",
            "nullable": true
          },
          "landmark": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Consultant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          },
          "socialMediaAccounts": {
            "type": "string",
            "nullable": true
          },
          "alternateContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "nullable": true
          },
          "mainSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MainSkillMapping"
            },
            "nullable": true
          },
          "subSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubSkillMapping"
            },
            "nullable": true
          },
          "isOpenForVerification": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phoneNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvitationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MainSkillMapping": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "skillId": {
            "type": "integer",
            "format": "int32"
          },
          "resourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skill": {
            "$ref": "#/components/schemas/Master"
          }
        },
        "additionalProperties": false
      },
      "Master": {
        "required": [
          "code",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "maxLength": 55,
            "minLength": 2,
            "type": "string"
          },
          "code": {
            "maxLength": 6,
            "minLength": 2,
            "type": "string"
          },
          "value": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Project": {
        "required": [
          "projectName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "projectName": {
            "maxLength": 155,
            "minLength": 1,
            "type": "string"
          },
          "projectDescription": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectResourceMapping": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          }
        },
        "additionalProperties": false
      },
      "RegistrationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "invitationId": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Resource": {
        "required": [
          "genderId",
          "jobTitle",
          "name",
          "vendorDetailsId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "vendorDetailsId": {
            "type": "integer",
            "format": "int32"
          },
          "vendorDetails": {
            "$ref": "#/components/schemas/VendorDetails"
          },
          "genderId": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "$ref": "#/components/schemas/Master"
          },
          "age": {
            "maximum": 65,
            "minimum": 18,
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "maxLength": 12,
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "jobTitle": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "nullable": true
          },
          "mainSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MainSkillMapping"
            },
            "nullable": true
          },
          "subSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubSkillMapping"
            },
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResourceMapping"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchResource": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchResourceGridRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "uData": {
            "$ref": "#/components/schemas/SearchResource"
          }
        },
        "additionalProperties": false
      },
      "SubSkillMapping": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "skillId": {
            "type": "integer",
            "format": "int32"
          },
          "resourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skill": {
            "$ref": "#/components/schemas/Master"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorDetails"
          },
          "consultant": {
            "$ref": "#/components/schemas/Consultant"
          }
        },
        "additionalProperties": false
      },
      "VendorDetails": {
        "required": [
          "assistanceDetailsRid",
          "cinLlpIn",
          "companyAddress",
          "companyEstablished",
          "companyIncorporationNumberAndCertificate",
          "companyName",
          "companyWebsite",
          "constitutionOfBusinessRid",
          "country",
          "emailId",
          "gstBillingAddress",
          "gstFilingFrequencyRid",
          "gstinOrTaxId",
          "linkedinProfile",
          "msmeNumber",
          "openToBackgroundVerificationRid",
          "panCardFile",
          "previousInvolvementWithUsRid",
          "sezEntityDetails",
          "teamSize",
          "vendorContactNumber",
          "vendorName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "emailId": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "vendorName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "companyName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "country": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "companyAddress": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "cinLlpIn": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "constitutionOfBusinessRid": {
            "type": "integer",
            "format": "int32"
          },
          "constitutionOfBusiness": {
            "$ref": "#/components/schemas/Master"
          },
          "companyEstablished": {
            "type": "string",
            "format": "date-time"
          },
          "companyIncorporationNumberAndCertificate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "panCardFile": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "msmeNumber": {
            "type": "string",
            "format": "uuid"
          },
          "gstinOrTaxId": {
            "type": "string",
            "format": "uuid"
          },
          "sezEntityDetails": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "gstBillingAddress": {
            "type": "string",
            "format": "uuid"
          },
          "gstFilingFrequencyRid": {
            "type": "integer",
            "format": "int32"
          },
          "gstFilingFrequency": {
            "$ref": "#/components/schemas/Master"
          },
          "linkedinProfile": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "companyWebsite": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "teamSize": {
            "type": "integer",
            "format": "int32"
          },
          "assistanceDetailsRid": {
            "type": "integer",
            "format": "int32"
          },
          "assistanceDetails": {
            "$ref": "#/components/schemas/Master"
          },
          "relocationStates": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "vendorContactNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "alternativeContactPointName": {
            "type": "string",
            "nullable": true
          },
          "alternativeContactNumber": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "alternativeContactEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "quarterlyRevenue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "openToBackgroundVerificationRid": {
            "type": "integer",
            "format": "int32"
          },
          "openToBackgroundVerification": {
            "$ref": "#/components/schemas/Master"
          },
          "previousInvolvementWithUsRid": {
            "type": "integer",
            "format": "int32"
          },
          "previousInvolvementWithUs": {
            "$ref": "#/components/schemas/Master"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter 'Bearer' [space] and then your token.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}